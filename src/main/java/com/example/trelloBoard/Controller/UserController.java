package com.example.trelloBoard.Controller;

import com.example.trelloBoard.Models.User;
import com.example.trelloBoard.Service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.List;

public class UserController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserService userService;
    /*
        Method to add a new user.
        @RequestParam name: String value of username
        @RequestParam email: String value of email
        returns String depicting success or failure of the post operation
         */
    @PostMapping(path="/addUser") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        User n = new User();
        n.setName(name);
        n.setEmail(email);
        userService.addNewUser(n);
        return "Saved";
    }

    /*
    Method to display all users as a list of User objects
     */
    @GetMapping(path="/allusers")
    public @ResponseBody List<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return (List<User>)userService.getAllUsers();
    }

    /*
    Method to delete a user by id
     */
    @GetMapping(path="/deleteuser")
    public @ResponseBody String deleteUser(int id) {
        try {
            userService.deleteUser(id);
            return "Success";
        }
        catch (Exception e){
            return "Failure";
        }
    }
}

